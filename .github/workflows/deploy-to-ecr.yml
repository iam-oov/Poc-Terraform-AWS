name: Deploy to AWS ECR

on:
  push:
    branches:
      - main

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  AWS_IAM_ROLE_ARN: ${{ secrets.AWS_IAM_ROLE_ARN }}
  TERRAFORM_DIR: ${{ vars.TERRAFORM_DIR }}
  TERRAFORM_VERSION: '1.12.0'

jobs:
  deploy:
    name: Deploy to ECR
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write # Required for OIDC with AWS

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.AWS_IAM_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}

      - name: Terraform Init
        id: init
        run: terraform init -input=false
        working-directory: ${{ env.TERRAFORM_DIR }}

      # First Apply: Create ECR and other infrastructure
      - name: Terraform Apply (ECR and initial setup)
        id: apply_infra
        run: terraform apply -auto-approve -input=false
        working-directory: ${{ env.TERRAFORM_DIR }}

      - name: Get ECR Details from Terraform Output
        id: get_ecr_details
        run: |
          ECR_FULL_REPO_URL=$(terraform output -raw ecr_repository_url)
          ECR_REGISTRY=$(echo "$ECR_FULL_REPO_URL" | cut -d'/' -f1)
          echo "ECR_REGISTRY=$ECR_REGISTRY" >> $GITHUB_ENV
        working-directory: ${{ env.TERRAFORM_DIR }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: docker/login-action@v3
        with:
          registry: ${{ env.ECR_REGISTRY }} # Use the registry extracted

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REPOSITORY_URL: ${{ env.ECR_REPOSITORY_URL }}
          IMAGE_TAG: ${{ github.sha }}
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ env.ECR_REPOSITORY_URL }}:latest

      # Second Apply: Update ECS with new image
      - name: Terraform Apply (Update ECS with new image)
        id: apply_ecs_update
        env:
          TF_VAR_app_image_uri: '${{ env.ECR_REPOSITORY_URL }}:${{ github.sha }}'
        run: terraform apply -auto-approve -input=false
        working-directory: ${{ env.TERRAFORM_DIR }}
